&PARAM VERSION = 13.2.0_2
DEFDAT  $MACHINE PUBLIC
CHAR $V_STEUMADA[32]
$V_STEUMADA[]="V13.2.0_2/VW3.3" ;VERSION IDENTIFIER
DECL EMSTOP_PATH $EMSTOP_PATH={T1 #ON,T2 #ON,AUT #ON,EX #ON} ;CONFIGURATION OF PATH-SAFE EMERGENCY STOP FOR T1,T2,AUT,EX
DECL DIGINCODE $DIGIN1CODE=#UNSIGNED ;CODING FOR DIGITAL INPUT 1
DECL DIGINCODE $DIGIN2CODE=#UNSIGNED ;CODING FOR DIGITAL INPUT 2
DECL DIGINCODE $DIGIN3CODE=#UNSIGNED ;CODING FOR DIGITAL INPUT 3
DECL DIGINCODE $DIGIN4CODE=#UNSIGNED ;CODING FOR DIGITAL INPUT 4
DECL DIGINCODE $DIGIN5CODE=#UNSIGNED ;CODING FOR DIGITAL INPUT 5
DECL DIGINCODE $DIGIN6CODE=#UNSIGNED ;CODING FOR DIGITAL INPUT 6
SIGNAL $EXT_START $IN[81];EXTERNAL START change to 1025 (always TRUE)
SIGNAL $MOVE_ENABLE $IN[82];GENERAL MOTION ENABLE
SIGNAL $RC_RDY1 $OUT[9] ;RC SYSTEM READY 1
SIGNAL $ALARM_STOP $OUT[1013] ;EMERGENCY STOP
SIGNAL $T1 $OUT[993] ;OPERATING MODE T1
SIGNAL $T2 $OUT[994] ;OPERATING MODE T2
SIGNAL $AUT $OUT[995] ;OPERATING MODE AUTOMATIC
SIGNAL $I_O_ACTCONF $OUT[12] ;I/O INTERFACE ACTIVE ACKNOWLEDGEMENT
SIGNAL $EXT $OUT[996] ;OPERATING MODE EXTERNAL
SIGNAL $STOPMESS $OUT[1010] ;STOP MESSAGE
SIGNAL $CONF_MESS $IN[1025] ;EXTERNAL ACKNOWLEDGEMENT
SIGNAL $USER_SAF $OUT[1011] ;USER SAFETY
SIGNAL $PERI_RDY $OUT[1012] ;PERIPHERAL READY
SIGNAL $IN_HOME $OUT[1000] ;ROBOT IN HOME POSITION
SIGNAL $IN_HOME1 FALSE
SIGNAL $IN_HOME2 FALSE
SIGNAL $IN_HOME3 FALSE
SIGNAL $IN_HOME4 FALSE
SIGNAL $IN_HOME5 FALSE
SIGNAL $HWEND $IN[1002] ;HW end switch for all axes
SIGNAL $DIGIN1 $IN[1026]  TO $IN[1026] ;digital input 1
SIGNAL $DIGIN2 $IN[1026]  TO $IN[1026] ;digital input 2
SIGNAL $DIGIN3 $IN[1026]  TO $IN[1026] ;digital input 3
SIGNAL $DIGIN4 $IN[1026]  TO $IN[1026] ;digital input 4
SIGNAL $DIGIN5 $IN[1026]  TO $IN[1026] ;digital input 5
SIGNAL $DIGIN6 $IN[1026]  TO $IN[1026] ;digital input 6
SIGNAL $STROBE1 $OUT[1015] ;strobe output for digital input 1
SIGNAL $STROBE2 $OUT[1016] ;strobe output for digital input 2
SIGNAL $STROBE3 $OUT[1017] ;strobe output for digital input 3
SIGNAL $STROBE4 $OUT[1018] ;strobe output for digital input 4
SIGNAL $STROBE5 $OUT[1019] ;strobe output for digital input 5
SIGNAL $STROBE6 $OUT[1020] ;strobe output for digital input 6
SIGNAL $DRIVES_ON $IN[1025] ;drives on (IN 12)
SIGNAL $DRIVES_OFF $IN[1024] ;drives enable
SIGNAL $ON_PATH $OUT[998] ;robot on path
SIGNAL $PR_MODE $OUT[10] ;manual/programming mode
SIGNAL $SS_MODE $OUT[11] ;manual/single-step
SIGNAL $ALARM_STOP_INTERN $OUT[1002] ;internal emergency stop
SIGNAL $WORKSTATE1 FALSE
SIGNAL $WORKSTATE2 FALSE
SIGNAL $WORKSTATE3 FALSE
SIGNAL $WORKSTATE4 FALSE
SIGNAL $WORKSTATE5 FALSE
SIGNAL $WORKSTATE6 FALSE
SIGNAL $WORKSTATE7 FALSE
SIGNAL $WORKSTATE8 FALSE
SIGNAL $AXWORKSTATE1 FALSE ;output of axis workspace monitoring
SIGNAL $AXWORKSTATE2 FALSE ;output of axis workspace monitoring
SIGNAL $AXWORKSTATE3 FALSE ;output of axis workspace monitoring
SIGNAL $AXWORKSTATE4 FALSE ;output of axis workspace monitoring
SIGNAL $AXWORKSTATE5 FALSE ;output of axis workspace monitoring
SIGNAL $AXWORKSTATE6 FALSE ;output of axis workspace monitoring
SIGNAL $AXWORKSTATE7 FALSE ;output of axis workspace monitoring
SIGNAL $AXWORKSTATE8 FALSE ;output of axis workspace monitoring
SIGNAL $ASYNC_AX1_P $IN[1026]
SIGNAL $ASYNC_AX2_P $IN[1026]
SIGNAL $ASYNC_AX3_P $IN[1026]
SIGNAL $ASYNC_AX4_P $IN[1026]
SIGNAL $ASYNC_AX5_P $IN[1026]
SIGNAL $ASYNC_AX6_P $IN[1026]
SIGNAL $ASYNC_AX1_M $IN[1026]
SIGNAL $ASYNC_AX2_M $IN[1026]
SIGNAL $ASYNC_AX3_M $IN[1026]
SIGNAL $ASYNC_AX4_M $IN[1026]
SIGNAL $ASYNC_AX5_M $IN[1026]
SIGNAL $ASYNC_AX6_M $IN[1026]
SIGNAL $ZUST_ASYNC $IN[1026]
SIGNAL $NEAR_POSRET $OUT[16] ;robot in tolerance window
SIGNAL $I_O_ACT $IN[1025] ;I/O interface active
SIGNAL $SAFEGATE_OP $IN[1025] ;safety gate on path stop
SIGNAL $MOVE_ENA_ACK FALSE ;feedback $MOVE_ENABLE to PLC
SIGNAL $COLL_ALARM FALSE ;collision alarm
SIGNAL $COLL_ENABLE FALSE ;collision software on/off
SIGNAL $LAST_BUFFERING_NOTOK $OUT[1003] ;output signals a pending accumulation message
SIGNAL $IMM_STOP $IN[1025] ;emergency stop from PLC
SIGNAL $AUX_POWER $IN[1026] ;external power supply active
SIGNAL $T2_ENABLE $IN[1025] ;safety speed
SIGNAL $ROBOCOASTER_CHECKSUM $OUT[2049]  TO $OUT[2080] ;checksum over MADA_SIGNATURES
BOOL $STROBE1LEV=TRUE ;active edge of strobe output for digital input 1
BOOL $STROBE2LEV=TRUE ;active edge of strobe output for digital input 2
BOOL $STROBE3LEV=TRUE ;active edge of strobe output for digital input 3
BOOL $STROBE4LEV=TRUE ;active edge of strobe output for digital input 4
BOOL $STROBE5LEV=TRUE ;active edge of strobe output for digital input 5
BOOL $STROBE6LEV=TRUE ;active edge of strobe output for digital input 6
REAL $FAN_FOLLOW_UP_TIME=5.0 ;follow-up time for the fan control
SIGNAL $HW_WARNING FALSE ;projectable system variable
ENDDAT
