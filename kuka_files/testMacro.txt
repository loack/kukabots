&ACCESS RVP
&REL 1
&PARAM TEMPLATE = C:\KRC\TEMPLATE\MODULE.DAT
&PARAM EDITMASK = *
COMMENT "Simple KUKA KRL Program"

DEF MyProgram( )
;FOLD INI ; Initialization
  DECL REAL VEL_CP = 1.0 ; Velocity for Cartesian movements in m/s
  DECL REAL ACC_CP = 1.0 ; Acceleration for Cartesian movements in m/s^2
  DECL REAL CIRC_RAD = 50.0 ; Radius of the circle in mm
  DECL REAL PI = 3.1415926535
  
  ; Absolute axis positions for the first point.  Use meaningful names.
  DECL AXIS AXIS_START
  AXIS_START.A1 = 0.0
  AXIS_START.A2 = -10.0
  AXIS_START.A3 = 80.0
  AXIS_START.A4 = 0.0
  AXIS_START.A5 = 0.0
  AXIS_START.A6 = 0.0

  ; Cartesian coordinates for circle center and auxiliary points.  More readable.
  DECL FRAME CIRC_CENTER, CIRC_POINT1, CIRC_POINT2
  
  ; Initial position (optional, but good practice)
  PTP AXIS_START Vel=100 % DEFAULT Acc=100 % DEFAULT

  ; Define the circle center and start point relative to the base coordinate system.
  CIRC_CENTER.X = 400.0 ; in mm
  CIRC_CENTER.Y = 0.0   ; in mm
  CIRC_CENTER.Z = 200.0 ; in mm
  CIRC_CENTER.A = 0.0   ; Orientation angles (A, B, C) in degrees
  CIRC_CENTER.B = 0.0
  CIRC_CENTER.C = 0.0

  CIRC_POINT1.X = CIRC_CENTER.X + CIRC_RAD ; Start point of the circle
  CIRC_POINT1.Y = CIRC_CENTER.Y;
  CIRC_POINT1.Z = CIRC_CENTER.Z;
  CIRC_POINT1.A = CIRC_CENTER.A
  CIRC_POINT1.B = CIRC_CENTER.B
  CIRC_POINT1.C = CIRC_CENTER.C

  CIRC_POINT2.X = CIRC_CENTER.X ; Point 2 for defining the circle plane.
  CIRC_POINT2.Y = CIRC_CENTER.Y + CIRC_RAD;
  CIRC_POINT2.Z = CIRC_CENTER.Z;
  CIRC_POINT2.A = CIRC_CENTER.A
  CIRC_POINT2.B = CIRC_CENTER.B
  CIRC_POINT2.C = CIRC_CENTER.C
  
  ; ENDFOLD
  
  ; 1. Move to the starting point in axis coordinates.
  PTP AXIS_START Vel=100 % DEFAULT Acc=100 % DEFAULT ; Use the defined start point.

  ; 2. Linear movement in Cartesian coordinates.
  LIN {X 500.0, Y 200.0, Z 300.0, A 0.0, B 0.0, C 0.0} Vel=VEL_CP Acc=ACC_CP

  ; 3. Continuous circular movement.
  ;    Use CIRC to define the circle.  Vel and Acc apply to the Cartesian motion.
  CIRC CIRC_POINT1, CIRC_POINT2 Vel=VEL_CP Acc=ACC_CP ; Draw the circle.

  ; Stop the continuous motion (optional, but recommended for safety).
  HALT

END

