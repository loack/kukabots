&PARAM TPVW_VERSION = 3.3.5
&REL 1
DEFDAT  $CONFIG
;FOLD ;%{E}
; NEW BASE-PACKAGE   
STRUC PDAT INT TOOL_NO,BASE_NO,REAL VEL,ACC,APO_DIST
STRUC LDAT INT TOOL_NO,BASE_NO,REAL VEL,ACC,APO_DIST,APO_FAC
STRUC FDAT INT TOOL_NO,BASE_NO,IPO_MODE IPO_FRAME
ENUM OUT_MODETYPE STOP_,TRIGGER_,CONT_
STRUC ODAT INT OUT_NO,BOOL STATE,REAL PULSE_TIME,OUT_MODETYPE OUT_MODE,REAL TIME_DELAY,OFFSET
DECL PDAT PDAT0={TOOL_NO 1,BASE_NO 0,VEL 100.0,ACC 100.0,APO_DIST 100.0}
DECL LDAT LDAT0={TOOL_NO 1,BASE_NO 0,VEL 1.75,ACC 100.0,APO_DIST 100.0,APO_FAC 50.0}
DECL ODAT ODAT0={OUT_NO 1,STATE TRUE,PULSE_TIME 0.0,OUT_MODE #STOP_,TIME_DELAY 0.0,OFFSET 0.0}
DECL PDAT PDAT_ACT={TOOL_NO 1,BASE_NO 0,APO_DIST 100.0}
DECL LDAT LDAT_ACT={TOOL_NO 1,BASE_NO 0,APO_DIST 100.0,APO_FAC 50.0}
DECL ODAT ODAT_ACT={OUT_NO 1,STATE TRUE,PULSE_TIME 0.0,OUT_MODE #STOP_,TIME_DELAY 0.0,OFFSET 0.0}
DECL FDAT FDEFAULT={TOOL_NO 1,BASE_NO 0,IPO_FRAME #BASE}
DECL FDAT FHOME={TOOL_NO 1,BASE_NO 0,IPO_FRAME #BASE}
DECL FDAT FDAT_ACT={TOOL_NO 1,BASE_NO 0,IPO_FRAME #BASE}
;GROUP-Definitions
INT COMPL_GROUP='B0001'
INT DEF_GROUP[10]
DEF_GROUP[1]='B1111' ; complete
DEF_GROUP[2]='B0001' ; robot only
DEF_GROUP[3]='B0011' ; robot and track
DEF_GROUP[4]='B0111' ; robot, track and ext. axis2
DEF_GROUP[5]='B1011' ; robot, track and ext. axis3
DEF_GROUP[6]='B1111' ; robot, track and ext. axis2+3
DEF_GROUP[7]='B1111' ; complete
DEF_GROUP[8]='B1111' ; complete
DEF_GROUP[9]='B1111' ; complete
DEF_GROUP[10]='B1111' ; complete
CHAR GROUP_NAME[10,20]
GROUP_NAME[1,]="complete"
GROUP_NAME[2,]="robot only"
GROUP_NAME[3,]="robot and track"
GROUP_NAME[4,]="robot,track and tblA"
GROUP_NAME[5,]="robot,track and tblB"
GROUP_NAME[6,]="complete"
GROUP_NAME[7,]="complete"
GROUP_NAME[8,]="complete"
GROUP_NAME[9,]="complete"
GROUP_NAME[10,]="complete"
INT $ACT_GROUP='B0001'
; global variables for wait
DECL CHAR WAIT_MESS[255]
WAIT_MESS[]=" "
BOOL SIMU_KEY=FALSE
;___$$$___CONFIG.ROB___start___
;**********************************
; Block:  ROBOT
;         IR ....................
;**********************************
;==================================
; Default parameters for movement
; These values shouldn't be changed
;==================================
; general MOVEMENT - parameters:
;----------------------------------
INT DEF_OV_PRO=100
INT DEF_ADVANCE=1
; PTP - MOVEMENTS
;----------------------------------
INT DEF_VEL_PTP=100
INT DEF_ACC_PTP=50
; CP - MOVEMENTS
;----------------------------------
REAL DEF_VEL_CP=2.0
REAL DEF_VEL_ORI1=200.0
REAL DEF_VEL_ORI2=200.0
REAL DEF_ACC_CP=2.29999995
REAL DEF_ACC_ORI1=100.0
REAL DEF_ACC_ORI2=100.0
REAL DEF_VEL_FACT=1.0
BOOL NO_MPARA_ASSIGN=FALSE
DECL CIRC_TYPE DEF_CIRC_TYPE=#BASE
;___$$$___CONFIG.ROB___end_____
;___$$$___CONFIG.BAS___start___
;**********************************
; BLOCK:  BASIC - package
; 
; 
;**********************************
;==================================
; Structures:
;==================================
STRUC EX_AX_DATA_T FRAME ROOT,ESYS EX_KIN,FRAME OFFSET
ENUM BAS_COMMAND INITMOV,INITMOVEUP,ACC_CP,ACC_GLUE,ACC_PTP,VEL_CP,VEL_PTP,TOOL,BASE,EX_BASE,PTP_DAT,CP_DAT,OUT_DAT,GROUP,FRAMES,OUT_SYNC,OUT_ASYNC
;==================================
; External declarations:
;==================================
EXT  BAS (BAS_COMMAND  :IN,REAL  :IN )
;==================================
; Variables:
;==================================
;  POSITION
;----------------------------------
E6AXIS HOME={a1 0.0,a2 -90.0,a3 90.0,a4 0.0,a5 0.0,a6 0.0,e1 0.0,e2 0.0,e3 0.0,e4 0.0,e5 0.0,e6 0.0}

;-------KUKAVARPROXY USER VARIABLES -----------------
E6AXIS P1={a1 0.0,a2 -90.0,a3 90.0,a4 0.0,a5 0.0,a6 0.0,e1 0.0,e2 0.0,e3 0.0,e4 0.0,e5 0.0,e6 0.0}
E6AXIS P2={a1 0.0,a2 -90.0,a3 90.0,a4 0.0,a5 0.0,a6 0.0,e1 0.0,e2 0.0,e3 0.0,e4 0.0,e5 0.0,e6 0.0}
E6AXIS P3={a1 0.0,a2 -90.0,a3 90.0,a4 0.0,a5 0.0,a6 0.0,e1 0.0,e2 0.0,e3 0.0,e4 0.0,e5 0.0,e6 0.0}
FRAME XPT1={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
FRAME XPT2={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
FRAME XPT3={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
DECL BOOL KVP_START = FALSE
DECL BOOL KVPMOVE_ENABLE = FALSE
DECL BOOL KVP_PTP_MOTION = FALSE
DECL BOOL KVP_CP_MOTION = FALSE
DECL BOOL KVP_CIRC_MOTION = FALSE
DECL BOOL KVP_LIN_MOTION = FALSE
DECL BOOL KVP_MOTION_END = FALSE


; ---------------------------------------------------


; REFERENCE POINT
;----------------------------------
DECL FRAME REF_PT[16]
REF_PT[1]={x 1960.93359,y -184.590836,z 1578.78198,a 139.133911,b 42.8393021,c 131.00502}
REF_PT[2]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
REF_PT[3]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
REF_PT[4]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
REF_PT[5]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
REF_PT[6]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
REF_PT[7]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
REF_PT[8]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
REF_PT[9]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
REF_PT[10]={x 2131.31299,y -338.20874,z 1350.24573,a 30.2450657,b 11.3389235,c 109.445892}
REF_PT[11]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
REF_PT[12]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
REF_PT[13]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
REF_PT[14]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
REF_PT[15]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
REF_PT[16]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
FRAME REF_TOOL={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
; TOOL and BASE data
;----------------------------------
INT MAX_TOOL=16
DECL CHAR TOOL_NAME[16,24]
TOOL_NAME[1,]="T1"
TOOL_NAME[2,]="T2"
TOOL_NAME[3,]="T3"
TOOL_NAME[4,]="T4"
TOOL_NAME[5,]="T5"
TOOL_NAME[6,]="T6"
TOOL_NAME[7,]="T7"
TOOL_NAME[8,]="T8"
TOOL_NAME[9,]="T9"
TOOL_NAME[10,]="T10"
TOOL_NAME[11,]="T11"
TOOL_NAME[12,]="T12"
TOOL_NAME[13,]="T13"
TOOL_NAME[14,]="T14"
TOOL_NAME[15,]="T15"
TOOL_NAME[16,]="T16"
DECL FRAME TOOL_DATA[16]
TOOL_DATA[1]={x 440.339111,y -0.597837985,z 530.674927,a -180.0,b 15.0,c 0.0}
TOOL_DATA[2]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
TOOL_DATA[3]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
TOOL_DATA[4]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
TOOL_DATA[5]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
TOOL_DATA[6]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
TOOL_DATA[7]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
TOOL_DATA[8]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
TOOL_DATA[9]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
TOOL_DATA[10]={x 911.911438,y -26.2439861,z 607.04303,a 0.0,b 0.0,c 0.0}
TOOL_DATA[11]={x 569.359985,y -27.1700001,z 551.390015,a 0.0,b 0.0,c 0.0}
TOOL_DATA[12]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
TOOL_DATA[13]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
TOOL_DATA[14]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
TOOL_DATA[15]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
TOOL_DATA[16]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
DECL LOAD LOAD_DATA[16]
LOAD_DATA[1]={M 106.25,CM {x -54.7706299,y -5.35938883,z 252.838303,a -103.318199,b 36.2745895,c 60.8361092},J {X 5.25,Y 5.25,Z 8.46626663}}
LOAD_DATA[2]={M 106.25,CM {x -54.7706337,y -5.35938883,z 252.838333,a -103.31823,b 36.2745934,c 60.836113},J {X 5.25,Y 5.25,Z 8.46626663}}
LOAD_DATA[3]={M 106.25,CM {x -54.7706337,y -5.35938883,z 252.838333,a -103.31823,b 36.2745934,c 60.836113},J {X 5.25,Y 5.25,Z 8.46626663}}
LOAD_DATA[4]={M 106.25,CM {x -54.7706337,y -5.35938883,z 252.838333,a -103.31823,b 36.2745934,c 60.836113},J {X 5.25,Y 5.25,Z 8.46626663}}
LOAD_DATA[5]={M 106.25,CM {x -54.7706337,y -5.35938883,z 252.838333,a -103.31823,b 36.2745934,c 60.836113},J {X 5.25,Y 5.25,Z 8.46626663}}
LOAD_DATA[6]={M 106.25,CM {x -54.7706337,y -5.35938883,z 252.838333,a -103.31823,b 36.2745934,c 60.836113},J {X 5.25,Y 5.25,Z 8.46626663}}
LOAD_DATA[7]={M 106.25,CM {x -54.7706337,y -5.35938883,z 252.838333,a -103.31823,b 36.2745934,c 60.836113},J {X 5.25,Y 5.25,Z 8.46626663}}
LOAD_DATA[8]={M 106.25,CM {x -54.7706337,y -5.35938883,z 252.838333,a -103.31823,b 36.2745934,c 60.836113},J {X 5.25,Y 5.25,Z 8.46626663}}
LOAD_DATA[9]={M 106.25,CM {x -54.7706337,y -5.35938883,z 252.838333,a -103.31823,b 36.2745934,c 60.836113},J {X 5.25,Y 5.25,Z 8.46626663}}
LOAD_DATA[10]={M 106.25,CM {x -54.7706337,y -5.35938883,z 252.838333,a -103.31823,b 36.2745934,c 60.836113},J {X 5.25,Y 5.25,Z 8.46626663}}
LOAD_DATA[11]={M 106.25,CM {x -54.7706337,y -5.35938883,z 252.838333,a -103.31823,b 36.2745934,c 60.836113},J {X 5.25,Y 5.25,Z 8.46626663}}
LOAD_DATA[12]={M 106.25,CM {x -54.7706337,y -5.35938883,z 252.838333,a -103.31823,b 36.2745934,c 60.836113},J {X 5.25,Y 5.25,Z 8.46626663}}
LOAD_DATA[13]={M 106.25,CM {x -54.7706337,y -5.35938883,z 252.838333,a -103.31823,b 36.2745934,c 60.836113},J {X 5.25,Y 5.25,Z 8.46626663}}
LOAD_DATA[14]={M 106.25,CM {x -54.7706337,y -5.35938883,z 252.838333,a -103.31823,b 36.2745934,c 60.836113},J {X 5.25,Y 5.25,Z 8.46626663}}
LOAD_DATA[15]={M 106.25,CM {x -54.7706337,y -5.35938883,z 252.838333,a -103.31823,b 36.2745934,c 60.836113},J {X 5.25,Y 5.25,Z 8.46626663}}
LOAD_DATA[16]={M 106.25,CM {x -54.7706337,y -5.35938883,z 252.838333,a -103.31823,b 36.2745934,c 60.836113},J {X 5.25,Y 5.25,Z 8.46626663}}
DECL LOAD LOAD_A1_DATA={M -1.0,CM {x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0},J {X 0.0,Y 0.0,Z 0.0}}
DECL LOAD LOAD_A2_DATA={M -1.0,CM {x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0},J {X 0.0,Y 0.0,Z 0.0}}
DECL LOAD LOAD_A3_DATA={M -1.0,CM {x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0},J {X 0.0,Y 0.0,Z 0.0}}
DECL CHAR BASE_NAME[16,24]
BASE_NAME[1,]="B1"
BASE_NAME[2,]="B2"
BASE_NAME[3,]="B3"
BASE_NAME[4,]="B4"
BASE_NAME[5,]="B5"
BASE_NAME[6,]="B6"
BASE_NAME[7,]="B7"
BASE_NAME[8,]="B8"
BASE_NAME[9,]="B9"
BASE_NAME[10,]="B10"
BASE_NAME[11,]="tA"
BASE_NAME[12,]="tB"
BASE_NAME[13,]="tC"
BASE_NAME[14,]="tD"
BASE_NAME[15,]="tE"
BASE_NAME[16,]="tF"
INT MAX_BASE=16
DECL FRAME BASE_DATA[16]
BASE_DATA[1]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
BASE_DATA[2]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
BASE_DATA[3]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
BASE_DATA[4]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
BASE_DATA[5]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
BASE_DATA[6]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
BASE_DATA[7]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
BASE_DATA[8]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
BASE_DATA[9]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
BASE_DATA[10]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
BASE_DATA[11]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
BASE_DATA[12]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
BASE_DATA[13]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
BASE_DATA[14]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
BASE_DATA[15]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
BASE_DATA[16]={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}
;External AXIS data
;----------------------------------
INT MAX_EX_BASE=6
DECL EX_AX_DATA_T EX_AX_DATA[6]
EX_AX_DATA[1]={ROOT {x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0},EX_KIN #EASYS,OFFSET {x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}}
EX_AX_DATA[2]={ROOT {x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0},EX_KIN #EBSYS,OFFSET {x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}}
EX_AX_DATA[3]={ROOT {x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0},EX_KIN #ECSYS,OFFSET {x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}}
EX_AX_DATA[4]={ROOT {x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0},EX_KIN #EDSYS,OFFSET {x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}}
EX_AX_DATA[5]={ROOT {x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0},EX_KIN #EESYS,OFFSET {x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}}
EX_AX_DATA[6]={ROOT {x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0},EX_KIN #EFSYS,OFFSET {x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0}}

DECL CHAR EX_AX_NAME[6,24]
EX_AX_NAME[1,]=" "
EX_AX_NAME[2,]=" "
EX_AX_NAME[3,]=" "
EX_AX_NAME[4,]=" "
EX_AX_NAME[5,]=" "
EX_AX_NAME[6,]=" "

; Variables for axis CALIBRATING
DECL INT CAL_AXIS
BOOL CONST_SPEED
ENUM DIR_TYP FORWARD,BACKWARD
DECL DIR_TYP MOVE_DIR
;___$$$___CONFIG.BAS___end_____
;___$$$___CONFIG.H00___start___
;*********************************
; Block:  H00 - package
; 
;**********************************
;==================================
; Structures:
;==================================
;==================================
; External declarations:
;==================================
EXT  IR_STOPM ( )
;==================================
; Variables:
;==================================
; APO - parameters
;--------------------------------
INT DEF_APO_CPTP=50
INT DEF_APO_CVEL=100
REAL DEF_APO_CDIS=3.0
REAL DEF_APO_CORI=5.0
;___$$$___CONFIG.H00___end_____
;___$$$___CONFIG.P00___start___
;*********************************
; BLOCK:  Interface
;         Extern Mode
;         (KUKA-VW) - P00
; 
;**********************************
;==================================
; Structures:
;==================================
;==================================
; External declarations:
;==================================
;==================================
; Variables:
;==================================
; Variables for external
; Communication:
;----------------------------------
SIGNAL PRG_NR $IN[1]  TO $IN[8]
SIGNAL PRG_NR_REFL $OUT[1]  TO $OUT[8]
BOOL VW_CBY_CELL=FALSE
BOOL CALLBYSELECT=FALSE
INT PGNO=0 ;ext. pgno
INT P_OLD=5 ;old pgno
INT P_SELECT=5 ;last selected Folge
INT P_I ;intermediate pgno
INT P_TYPE=1 ;coding of ext. pgno
INT P_FBIT=1 ;first bit of ext. pgno input $IN[] 
INT R_FBIT=1 ;first bit of ext. pgno output $OUT[] 
INT P_LEN=8 ;length of ext. pgno (max. 16)
;outputs
INT RK100=13 ;user_saf and em_stop
INT PIAUS=160 ;robot has reached point output $OUT[]
INT LPKT=14 ;end of program output $OUT[]
INT PF0=15 ;robot in home position
INT WPROZ=17 ;waiting for a IBS-Master-Input
INT WSLAV=18 ;waiting for a IBS-Slave-Input
DECL BOOL B_WSLAV[3]
B_WSLAV[1]=FALSE
B_WSLAV[2]=FALSE
B_WSLAV[3]=FALSE
DECL BOOL B_WPROZ[3]
B_WPROZ[1]=FALSE
B_WPROZ[2]=FALSE
B_WPROZ[3]=FALSE
DECL INT I_PROSLA=0
BOOL OUT_WPROZ=FALSE ;signals for WPROZ-Output
BOOL OUT_WSLAV=FALSE ;signals for WSLAV-Output
;inputs
INT SRB=9 ;start program input $IN[]
;arrays
;structures
E6AXIS HOME_P={a1 0.0,a2 -90.0003967,a3 89.9994965,a4 0.0,a5 0.00189886999,a6 -2.65238996E-05,e1 0.0,e2 0.0,e3 0.0,e4 0.0,e5 0.0,e6 0.0}
;debug
INT K,P,STEP,BITSHIFT
BOOL P0_MERKER=TRUE
CHAR STR[40]
DECL STATE_T STAT
DECL MODUS_T MODE
BOOL N_VW
INT FB_FLAG=500
INT VERR_FLAG=0
INT A_QUAL=33
INT E_QUAL=991
INT ACT_PRG_NR=0 ;Dummy variable for FORWARD/INVERSE function in Vk_Edit (error bit)
CHAR L_MSG_SAVE[470]
BOOL INT10=FALSE
BOOL EG_SERVO_INIT=TRUE
;___$$$___CONFIG.P00___end_____
;___$$$___CONFIG.VW___start___
; interface for select routine
ENUM SUBTYPE UP,MAKRO,CYC_UP,CYC_MAKRO
ENUM ARI_TYP NUM,COUNT,BIN,ANA,ANAIN,TIMER
ENUM BOOL_TYP EIN,AUS,E,NOT_E,A,NOT_A,M,NOT_M,F,NOT_F,T,NOT_T,S,NOT_S
EXT  SELECT (SUBTYPE  :IN,INT  :IN,BOOL  :IN,ARI_TYP  :IN,INT  :IN,BOOL_TYP  :IN,INT  :IN )
REAL M_TIMEOUT=0.150000006
; interface for VW-Library
ENUM VW_COMMAND VW_INIT,VW_INIT_UP,BINOUT,ANAOUT,GUN,COUNTER,SET_TIME,MPARA,FB_STOP,FB_CHECK,TRIG_OUT,TRIG_BIN,TRIG_ANA,TRIG_ANAV,TRIG_ANAO,SUCH_START,SUCH_STOP,VW_SPS_INIT,VW_SPS_CYC,VW_AUE_INIT,VW_AUE_WAIT,VW_AUE_END,VW_ZANGE,VW_WEAV,VW_WEAV_C,VW_P_RESET,VW_P_FREE,VW_BLOCK_SEL,VERR_EIN,VERR_AUS,MOVE_BCO,IBS_CHANGE,SERVOGUN,CYC_SERVOGUN,SERVO_MAN,VW_PULSE
EXT  VW (VW_COMMAND  :IN,BOOL  :IN,REAL  :IN,REAL  :IN,REAL  :IN,REAL  :IN,BOOL  :IN,E6POS  :IN )
; interface for VW_USER-Library
ENUM VW_USER_CMD USR_INIT,USR_ADV,USR_TRIG,USR_MAIN,USR_SAW,USR_RESET,USR_CANCEL,USR_LOOP
EXT  VW_USER (VW_USER_CMD  :IN,REAL  :IN,REAL  :IN,REAL  :IN,REAL  :IN,REAL  :IN,REAL  :IN,BOOL  :IN )
EXT  VW_USR_R (VW_USER_CMD  :IN,REAL  :IN,REAL  :IN,REAL  :IN,REAL  :IN,REAL  :IN,REAL  :IN,BOOL  :IN )
EXT  VW_USR_S (VW_USER_CMD  :IN )
; VW movement parameter
ENUM MOVE_TYPES PTP_MOTION,PATH_MOTION,GLUE_MOTION
STRUC VW_MPARA_TYP INT TOOL_NO,BASE_NO,VB,VE,ACC,TRG_TIME,MOVE_TYPES MOVE_TYPE
DECL VW_MPARA_TYP VW_MPARA_ACT={TOOL_NO 1,BASE_NO 0,VB 100,VE 0,ACC 100,TRG_TIME 0,MOVE_TYPE #PTP_MOTION}
; definition of tool type
DECL IPO_MODE TOOL_TYPE[16]
TOOL_TYPE[1]=#BASE
TOOL_TYPE[2]=#BASE
TOOL_TYPE[3]=#BASE
TOOL_TYPE[4]=#BASE
TOOL_TYPE[5]=#BASE
TOOL_TYPE[6]=#BASE
TOOL_TYPE[7]=#BASE
TOOL_TYPE[8]=#BASE
TOOL_TYPE[9]=#BASE
TOOL_TYPE[10]=#BASE
TOOL_TYPE[11]=#BASE
TOOL_TYPE[12]=#BASE
TOOL_TYPE[13]=#BASE
TOOL_TYPE[14]=#BASE
TOOL_TYPE[15]=#BASE
TOOL_TYPE[16]=#BASE
ENUM ADV_T_TYPE STANDARD,TOOL_BASE,TOOL_EXAX
DECL ADV_T_TYPE ADV_TOOL[16]
ADV_TOOL[1]=#STANDARD
ADV_TOOL[2]=#STANDARD
ADV_TOOL[3]=#STANDARD
ADV_TOOL[4]=#STANDARD
ADV_TOOL[5]=#STANDARD
ADV_TOOL[6]=#STANDARD
ADV_TOOL[7]=#STANDARD
ADV_TOOL[8]=#STANDARD
ADV_TOOL[9]=#STANDARD
ADV_TOOL[10]=#STANDARD
ADV_TOOL[11]=#STANDARD
ADV_TOOL[12]=#STANDARD
ADV_TOOL[13]=#STANDARD
ADV_TOOL[14]=#STANDARD
ADV_TOOL[15]=#STANDARD
ADV_TOOL[16]=#STANDARD
ENUM BAS_TYPE NONE,TCP,BASE
DECL BAS_TYPE BASE_TYPE[16]
BASE_TYPE[1]=#NONE
BASE_TYPE[2]=#NONE
BASE_TYPE[3]=#NONE
BASE_TYPE[4]=#NONE
BASE_TYPE[5]=#NONE
BASE_TYPE[6]=#NONE
BASE_TYPE[7]=#NONE
BASE_TYPE[8]=#NONE
BASE_TYPE[9]=#NONE
BASE_TYPE[10]=#NONE
BASE_TYPE[11]=#NONE
BASE_TYPE[12]=#NONE
BASE_TYPE[13]=#NONE
BASE_TYPE[14]=#NONE
BASE_TYPE[15]=#NONE
BASE_TYPE[16]=#NONE
; standard P0 position
; E6AXIS P0={A1 0.0,A2 -90.0,A3 90.0,A4 0.0,A5 0.0,A6 0.0,E1 0.0,E2 0.0,E3 0.0,E4 0.0,E5 0.0,E6 0.0}
;Inbetriebnahme Flag
BOOL VW_INB=FALSE
;Handshake-Signal fuer autom. Cell-Anwahl
BOOL VW_CALL_CELL=FALSE
;Stop in der Punkt-SPS bei #MSTEP
BOOL STOP_FLAG=TRUE
; Variablen fuer manuelle Zangenbedienung
INT ZANGEN_FUNKT=0
INT AKT_ZANGE=2
BOOL GUN_OPEN=FALSE
BOOL GUN_CLOSE=FALSE
BOOL FL_GUN_FCT=FALSE
REAL PULS_TIME=0.300000012
; Zangendefinition
STRUC ZANGENTYP INT TYP,A_AUF,A_ZU,E_AUF,E_ZU,CHAR A_NAME_AUF[20],A_NAME_KLEM1[20],A_NAME_ZU[20],A_NAME_KLEM2[20],E_NAME_KLEM1[20],E_NAME_KLEM2[20]
DECL ZANGENTYP DEF_ZANGE[16]
DEF_ZANGE[1]={TYP 2,A_AUF 194,A_ZU 193,E_AUF 193,E_ZU 194,A_NAME_AUF[] "SZ1_A-hub_AUF",A_NAME_KLEM1[] "1.Schweissza",A_NAME_ZU[] "SZ1_A-hub_ZU",A_NAME_KLEM2[] "1.Schweissza",E_NAME_KLEM1[] "1.Schweissza",E_NAME_KLEM2[] "1.Schweissza"}
DEF_ZANGE[2]={TYP 2,A_AUF 196,A_ZU 195,E_AUF 195,E_ZU 193,A_NAME_AUF[] "SZ1_V-hub_AUF",A_NAME_KLEM1[] "1.Schweissza",A_NAME_ZU[] "SZ1_V-hub_ZU",A_NAME_KLEM2[] "1.Schweissza",E_NAME_KLEM1[] "1.Schweissza",E_NAME_KLEM2[] "1.Schweissza"}
DEF_ZANGE[3]={TYP 0,A_AUF 202,A_ZU 201,E_AUF 201,E_ZU 202,A_NAME_AUF[] "SZ2_A-hub_AUF",A_NAME_KLEM1[] "2.Schweissza",A_NAME_ZU[] "SZ2_A-hub_ZU",A_NAME_KLEM2[] "2.Schweissza",E_NAME_KLEM1[] "2.Schweissza",E_NAME_KLEM2[] "2.Schweissza"}
DEF_ZANGE[4]={TYP 0,A_AUF 204,A_ZU 203,E_AUF 203,E_ZU 201,A_NAME_AUF[] "SZ2_V-hub_AUF",A_NAME_KLEM1[] "2.Schweissza",A_NAME_ZU[] "SZ2_V-hub_ZU",A_NAME_KLEM2[] "2.Schweissza",E_NAME_KLEM1[] "2.Schweissza",E_NAME_KLEM2[] "2.Schweissza"}
DEF_ZANGE[5]={TYP 0,A_AUF 210,A_ZU 209,E_AUF 209,E_ZU 210,A_NAME_AUF[] "SZ3_A-hub_AUF",A_NAME_KLEM1[] "3.Schweissza",A_NAME_ZU[] "SZ3_A-hub_ZU",A_NAME_KLEM2[] "3.Schweissza",E_NAME_KLEM1[] "3.Schweissza",E_NAME_KLEM2[] "3.Schweissza"}
DEF_ZANGE[6]={TYP 0,A_AUF 212,A_ZU 211,E_AUF 211,E_ZU 209,A_NAME_AUF[] "SZ3Vorhub_AUF",A_NAME_KLEM1[] "3.Schweissza",A_NAME_ZU[] "SZ3_V-hub_ZU",A_NAME_KLEM2[] "3.Schweissza",E_NAME_KLEM1[] "3.Schweissza",E_NAME_KLEM2[] "3.Schweissza"}
DEF_ZANGE[7]={TYP 0,A_AUF 354,A_ZU 353,E_AUF 154,E_ZU 155,A_NAME_AUF[] "1.Greifer_AUF",A_NAME_KLEM1[] "1.Handlingza",A_NAME_ZU[] "1.Greifer_ZU",A_NAME_KLEM2[] "1.Handlingza",E_NAME_KLEM1[] "1.Handlingza",E_NAME_KLEM2[] "1.Handlingza"}
DEF_ZANGE[8]={TYP 0,A_AUF 356,A_ZU 355,E_AUF 154,E_ZU 155,A_NAME_AUF[] "2.Greifer_AUF",A_NAME_KLEM1[] "2.Handlingza",A_NAME_ZU[] "2.Greifer_ZU",A_NAME_KLEM2[] "2.Handlingza",E_NAME_KLEM1[] "2.Handlingza",E_NAME_KLEM2[] "2.Handlingza"}
DEF_ZANGE[9]={TYP 0,A_AUF 154,A_ZU 155,E_AUF 154,E_ZU 155,A_NAME_AUF[] "3.Greifer_AUF",A_NAME_KLEM1[] "3.Handlingza",A_NAME_ZU[] "3.Greifer_ZU",A_NAME_KLEM2[] "3.Handlingza",E_NAME_KLEM1[] "3.Handlingza",E_NAME_KLEM2[] "3.Handlingza"}
DEF_ZANGE[10]={TYP 0,A_AUF 218,A_ZU 217,E_AUF 218,E_ZU 217,A_NAME_AUF[] "1.Einschwzyl_R",A_NAME_KLEM1[] "1.ext_Fraeser",A_NAME_ZU[] "1.Einschwzyl_V",A_NAME_KLEM2[] "1.ext_Fraeser",E_NAME_KLEM1[] "1.ext_Fraeser",E_NAME_KLEM2[] "1.ext Fraeser"}
DEF_ZANGE[11]={TYP 0,A_AUF 220,A_ZU 219,E_AUF 220,E_ZU 219,A_NAME_AUF[] "2.Einschwzyl_R",A_NAME_KLEM1[] "2.ext_Fraeser",A_NAME_ZU[] "2.Einschwzyl_V",A_NAME_KLEM2[] "2.ext_Fraeser",E_NAME_KLEM1[] "2.ext_Fraeser",E_NAME_KLEM2[] "2.ext Fraeser"}
DEF_ZANGE[12]={TYP 0,A_AUF 9,A_ZU 10,E_AUF 9,E_ZU 10,A_NAME_AUF[] "ZANGE12_AUF",A_NAME_KLEM1[] "A_KLEMME12",A_NAME_ZU[] "ZANGE12_ZU",A_NAME_KLEM2[] "A_KLEMME_12",E_NAME_KLEM1[] "E_KLEMME12",E_NAME_KLEM2[] "E_KLEMME_12"}
DEF_ZANGE[13]={TYP 0,A_AUF 9,A_ZU 10,E_AUF 9,E_ZU 10,A_NAME_AUF[] "ZANGE13_AUF",A_NAME_KLEM1[] "A_KLEMME13",A_NAME_ZU[] "ZANGE13_ZU",A_NAME_KLEM2[] "A_KLEMME_13",E_NAME_KLEM1[] "E_KLEMME13",E_NAME_KLEM2[] "E_KLEMME_13"}
DEF_ZANGE[14]={TYP 0,A_AUF 9,A_ZU 10,E_AUF 9,E_ZU 10,A_NAME_AUF[] "ZANGE14_AUF",A_NAME_KLEM1[] "A_KLEMME14",A_NAME_ZU[] "ZANGE14_ZU",A_NAME_KLEM2[] "A_KLEMME_14",E_NAME_KLEM1[] "E_KLEMME14",E_NAME_KLEM2[] "E_KLEMME_14"}
DEF_ZANGE[15]={TYP 0,A_AUF 9,A_ZU 10,E_AUF 9,E_ZU 10,A_NAME_AUF[] "ZANGE15_AUF",A_NAME_KLEM1[] "A_KLEMME15",A_NAME_ZU[] "ZANGE15_ZU",A_NAME_KLEM2[] "A_KLEMME_15",E_NAME_KLEM1[] "E_KLEMME15",E_NAME_KLEM2[] "E_KLEMME_15"}
DEF_ZANGE[16]={TYP 0,A_AUF 9,A_ZU 10,E_AUF 9,E_ZU 10,A_NAME_AUF[] "ZANGE16_AUF",A_NAME_KLEM1[] "A_KLEMME16",A_NAME_ZU[] "ZANGE16_ZU",A_NAME_KLEM2[] "A_KLEMME_16",E_NAME_KLEM1[] "E_KLEMME16",E_NAME_KLEM2[] "E_KLEMME_16"}
ENUM IBS_MODE_TYP PREE_OFF,PAST_OFF
STRUC IBSZANGENTYP INT SEGMENT,TEILNEHMER,IBS_MODE_TYP IBS_MODE,CHAR NAME[20]
DECL IBSZANGENTYP DEF_IBSZANGE[16]
DEF_IBSZANGE[1]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
DEF_IBSZANGE[2]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
DEF_IBSZANGE[3]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
DEF_IBSZANGE[4]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
DEF_IBSZANGE[5]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
DEF_IBSZANGE[6]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
DEF_IBSZANGE[7]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
DEF_IBSZANGE[8]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
DEF_IBSZANGE[9]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
DEF_IBSZANGE[10]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
DEF_IBSZANGE[11]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
DEF_IBSZANGE[12]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
DEF_IBSZANGE[13]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
DEF_IBSZANGE[14]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
DEF_IBSZANGE[15]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
DEF_IBSZANGE[16]={SEGMENT 0,TEILNEHMER 0,IBS_MODE #PREE_OFF,NAME[] "                    "}
STRUC LAST_IBS_TYP INT ON,INT OFF,BOOL STATE
DECL LAST_IBS_TYP LAST_IBS_PRO={ON 0,OFF 0,STATE FALSE}
DECL INT B_FBIT[10]
B_FBIT[1]=577
B_FBIT[2]=625
B_FBIT[3]=841
B_FBIT[4]=857
B_FBIT[5]=905
B_FBIT[6]=921
B_FBIT[7]=761
B_FBIT[8]=150
B_FBIT[9]=152
B_FBIT[10]=43
; length of binary outputs
DECL INT B_LEN[10]
B_LEN[1]=16
B_LEN[2]=16
B_LEN[3]=4
B_LEN[4]=4
B_LEN[5]=4
B_LEN[6]=4
B_LEN[7]=7
B_LEN[8]=2
B_LEN[9]=2
B_LEN[10]=6
; parity for binary outputs
ENUM PAR_TYPE EVEN,ODD,NONE
DECL PAR_TYPE B_PAR[10]
B_PAR[1]=#NONE
B_PAR[2]=#NONE
B_PAR[3]=#NONE
B_PAR[4]=#NONE
B_PAR[5]=#NONE
B_PAR[6]=#NONE
B_PAR[7]=#NONE
B_PAR[8]=#NONE
B_PAR[9]=#NONE
B_PAR[10]=#NONE
; Signals for binary outputs
SIGNAL BINOUT1 $OUT[577]  TO $OUT[592]
SIGNAL BINOUT2 $OUT[625]  TO $OUT[640]
SIGNAL BINOUT3 $OUT[841]  TO $OUT[844]
SIGNAL BINOUT4 $OUT[857]  TO $OUT[860]
SIGNAL BINOUT5 $OUT[905]  TO $OUT[908]
SIGNAL BINOUT6 $OUT[921]  TO $OUT[924]
SIGNAL BINOUT7 $OUT[761]  TO $OUT[767]
SIGNAL BINOUT8 $OUT[150]  TO $OUT[151]
SIGNAL BINOUT9 $OUT[152]  TO $OUT[153]
SIGNAL BINOUT10 $OUT[43]  TO $OUT[48]
; actual value of binary outputs
DECL INT B[10]
B[1]=9931
B[2]=0
B[3]=0
B[4]=0
B[5]=0
B[6]=0
B[7]=0
B[8]=0
B[9]=0
B[10]=0
; definition zaehler
INT I[10]
I[1]=21204
I[2]=15739790
I[3]=380
I[4]=972
I[5]=0
I[6]=0
I[7]=-12
I[8]=7
I[9]=0
I[10]=0
; definition sensor semaphore
BOOL S[32]
S[1]=FALSE
S[2]=FALSE
S[3]=FALSE
S[4]=FALSE
S[5]=FALSE
S[6]=FALSE
S[7]=FALSE
S[8]=FALSE
S[9]=FALSE
S[10]=FALSE
S[11]=FALSE
S[12]=FALSE
S[13]=FALSE
S[14]=FALSE
S[15]=FALSE
S[16]=FALSE
S[17]=FALSE
S[18]=FALSE
S[19]=FALSE
S[20]=FALSE
S[21]=FALSE
S[22]=FALSE
S[23]=FALSE
S[24]=FALSE
S[25]=FALSE
S[26]=FALSE
S[27]=FALSE
S[28]=FALSE
S[29]=FALSE
S[30]=FALSE
S[31]=FALSE
S[32]=FALSE
; Analogkanaele fuer zyklische Analogausgabe
SIGNAL ANA1 $ANOUT[1]
SIGNAL ANA2 $ANOUT[2]
SIGNAL ANA3 $ANOUT[3]
SIGNAL ANA4 $ANOUT[4]
SIGNAL ANA5 $ANOUT[5]
SIGNAL ANA6 $ANOUT[6]
SIGNAL ANA7 $ANOUT[7]
SIGNAL ANA8 $ANOUT[8]
SIGNAL ANA9 $ANOUT[9]
SIGNAL ANA10 $ANOUT[10]
SIGNAL ANA11 $ANOUT[11]
SIGNAL ANA12 $ANOUT[12]
SIGNAL ANA13 $ANOUT[13]
SIGNAL ANA14 $ANOUT[14]
SIGNAL ANA15 $ANOUT[15]
SIGNAL ANA16 $ANOUT[16]
; Faktoren und Offset fuer zyklische Analogausgabe
REAL FAC1=0.0
REAL FAC2=0.0
REAL FAC3=0.0
REAL FAC4=0.0
REAL FAC5=0.0
REAL FAC6=0.0
REAL FAC7=0.0
REAL FAC8=0.0
REAL FAC9=0.0
REAL FAC10=0.0
REAL FAC11=0.0
REAL FAC12=0.0
REAL FAC13=0.0
REAL FAC14=0.0
REAL FAC15=0.0
REAL FAC16=0.0
REAL OFS1=0.0
REAL OFS2=0.0
REAL OFS3=0.0
REAL OFS4=0.0
REAL OFS5=0.0
REAL OFS6=0.0
REAL OFS7=0.0
REAL OFS8=0.0
REAL OFS9=0.0
REAL OFS10=0.0
REAL OFS11=0.0
REAL OFS12=0.0
REAL OFS13=0.0
REAL OFS14=0.0
REAL OFS15=0.0
REAL OFS16=0.0
; negativer delay fuer zyklische Analogausgaben
REAL ANA_DELAY1=0.0
REAL ANA_DELAY2=0.0
REAL ANA_DELAY3=0.0
REAL ANA_DELAY4=0.0
REAL ANA_DELAY5=0.0
REAL ANA_DELAY6=0.0
REAL ANA_DELAY7=0.0
REAL ANA_DELAY8=0.0
REAL ANA_DELAY9=0.0
REAL ANA_DELAY10=0.0
REAL ANA_DELAY11=0.0
REAL ANA_DELAY12=0.0
REAL ANA_DELAY13=0.0
REAL ANA_DELAY14=0.0
REAL ANA_DELAY15=0.0
REAL ANA_DELAY16=0.0
; Variablen fuer den Verriegleungsbefehl
STRUC VERR_TYP INT IN,OUT,CHAR NAME[7],CHAR FREE_TEXT[8]
DECL VERR_TYP VW_VERR[8]
VW_VERR[1]={IN 1025,OUT 0,NAME[] "       ",FREE_TEXT[] "        "}
VW_VERR[2]={IN 1025,OUT 0,NAME[] "       ",FREE_TEXT[] "        "}
VW_VERR[3]={IN 1025,OUT 0,NAME[] "       ",FREE_TEXT[] "        "}
VW_VERR[4]={IN 1025,OUT 0,NAME[] "       ",FREE_TEXT[] "        "}
VW_VERR[5]={IN 1025,OUT 0,NAME[] "       ",FREE_TEXT[] "        "}
VW_VERR[6]={IN 1025,OUT 0,NAME[] "       ",FREE_TEXT[] "        "}
VW_VERR[7]={IN 1025,OUT 0,NAME[] "       ",FREE_TEXT[] "        "}
VW_VERR[8]={IN 1025,OUT 0,NAME[] "       ",FREE_TEXT[] "        "}
DECL CHAR TEMP_E[8]
TEMP_E[]=" E%I"
DECL INT ACT_VERR_OUT[8]
ACT_VERR_OUT[1]=0
ACT_VERR_OUT[2]=0
ACT_VERR_OUT[3]=0
ACT_VERR_OUT[4]=0
ACT_VERR_OUT[5]=0
ACT_VERR_OUT[6]=0
ACT_VERR_OUT[7]=0
ACT_VERR_OUT[8]=0
; variable check if SPS is ready
BOOL SPS_FERTIG=FALSE
;Wartezeit solange Trigger nicht i.O.
REAL WAIT_TIME=0.0
; variable for PLC number
INT SPS_N=-1
;Suchlauf
DECL E6POS Z_PUNKT={x 0.0,y 0.0,z 0.0,a 0.0,b 0.0,c 0.0,e1 0.0,e2 0.0,e3 0.0,e4 0.0,e5 0.0,e6 0.0}
INT OV_OLD=1
INT SUCH_RED=1
BOOL SEARCH_ACTIV=FALSE
; section for mechanical and thermal weaving
INT A_WEAVE_FILT=112
INT A_LAST_FILT=204
INT FIGUR
; Fahrbedingung Online / Punkt-SPS
STRUC T_FB_STATE INT N,BOOL HOLD,BOOL APO_2
DECL T_FB_STATE FB_STATE={N 18,HOLD TRUE,APO_2 FALSE}
; Value Cycflag[30]
BOOL VALCYCFL30=FALSE
;Makro-SAW
DECL PRO_MODE LAST_PRMODE=#GO
DECL BOOL CHG_PRMODE=FALSE
DECL BOOL CHG_PRSTATE=TRUE
;Rueckwaertsfahren
BOOL BSTEP_FLAG=FALSE
BOOL T_BSTEP=FALSE
;Override when changing operation mode
BOOL DISABLE_OV_CHANGE=FALSE
BOOL OV_CHANGED=FALSE ;Override changed by EXT/T1/T2
INT OLD_OV_PRO=100 ;Restore old value of $OV_PRO
DECL MODE_OP OLD_MODE_OP=#T1 ;Restore old $MODE_OP
DECL BOOL DownLoadActive=FALSE

BOOL OV_REGLER_ON=TRUE
BOOL ReglerEin=FALSE
BOOL ReglerEin2=TRUE
BOOL LastReglerEin=FALSE
BOOL LastReglerEin2=TRUE
REAL OVvomRegler=-1.0
REAL OVbeiReglerEin=100.0
REAL LetzterNow=4232679.0
REAL Now=4232679.0
REAL Laufzeit=59436.0156

DECL DATE LastDate={CSEC 0,SEC 45,MIN 22,HOUR 17,DAY 15,MONTH 5,YEAR 2025}
DECL DATE NewDate={CSEC 0,SEC 45,MIN 22,HOUR 17,DAY 15,MONTH 5,YEAR 2025}

ENUM ReglerFunktion ReglerEnabled,ReglerDisabled,ReglerAktiv,ReglerPassiv,keine
STRUC Logtyp ReglerFunktion RegFunkt,DATE RegDate
INT AktLogZeiger=5
DECL Logtyp ReglerLog[20]
ReglerLog[1]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 47,MIN 49,HOUR 10,DAY 4,MONTH 5,YEAR 2024}}
ReglerLog[2]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 45,MIN 34,HOUR 21,DAY 4,MONTH 5,YEAR 2015}}
ReglerLog[3]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 29,MIN 47,HOUR 23,DAY 4,MONTH 5,YEAR 2015}}
ReglerLog[4]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 3,MIN 16,HOUR 17,DAY 15,MONTH 5,YEAR 2025}}
ReglerLog[5]={RegFunkt #ReglerDisabled,RegDate {CSEC 0,SEC 35,MIN 49,HOUR 14,DAY 15,MONTH 11,YEAR 2022}}
ReglerLog[6]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 48,MIN 33,HOUR 4,DAY 16,MONTH 11,YEAR 2022}}
ReglerLog[7]={RegFunkt #ReglerDisabled,RegDate {CSEC 0,SEC 8,MIN 10,HOUR 17,DAY 24,MONTH 11,YEAR 2022}}
ReglerLog[8]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 0,MIN 59,HOUR 20,DAY 25,MONTH 11,YEAR 2022}}
ReglerLog[9]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 27,MIN 54,HOUR 3,DAY 4,MONTH 5,YEAR 2024}}
ReglerLog[10]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 17,MIN 44,HOUR 4,DAY 4,MONTH 5,YEAR 2024}}
ReglerLog[11]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 22,MIN 10,HOUR 5,DAY 4,MONTH 5,YEAR 2024}}
ReglerLog[12]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 24,MIN 18,HOUR 5,DAY 4,MONTH 5,YEAR 2024}}
ReglerLog[13]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 51,MIN 24,HOUR 5,DAY 4,MONTH 5,YEAR 2024}}
ReglerLog[14]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 25,MIN 19,HOUR 6,DAY 4,MONTH 5,YEAR 2024}}
ReglerLog[15]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 7,MIN 31,HOUR 6,DAY 4,MONTH 5,YEAR 2024}}
ReglerLog[16]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 8,MIN 7,HOUR 7,DAY 4,MONTH 5,YEAR 2024}}
ReglerLog[17]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 28,MIN 30,HOUR 7,DAY 4,MONTH 5,YEAR 2024}}
ReglerLog[18]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 8,MIN 7,HOUR 8,DAY 4,MONTH 5,YEAR 2024}}
ReglerLog[19]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 42,MIN 13,HOUR 8,DAY 4,MONTH 5,YEAR 2024}}
ReglerLog[20]={RegFunkt #ReglerEnabled,RegDate {CSEC 0,SEC 42,MIN 2,HOUR 9,DAY 4,MONTH 5,YEAR 2024}}

; external declarations
EXT  WEAV_DEF (INT  :IN )
EXT  MAKROSPS ( )
EXT  MAKROSAW ( )
EXT  MAKROSG ( )
EXT  MAKRO0 ( )
EXT  MAKRO1 ( )
EXT  MAKRO2 ( )
EXT  MAKRO3 ( )
EXT  MAKRO4 ( )
EXT  MAKRO5 ( )
EXT  MAKRO6 ( )
EXT  MAKRO7 ( )
EXT  MAKRO8 ( )
EXT  MAKRO9 ( )
EXT  MAKRO10 ( )
EXT  MAKRO11 ( )
EXT  MAKRO12 ( )
EXT  MAKRO13 ( )
EXT  MAKRO14 ( )
EXT  MAKRO15 ( )
EXT  MAKRO16 ( )
EXT  MAKRO17 ( )
EXT  MAKRO18 ( )
EXT  MAKRO19 ( )
EXT  MAKRO20 ( )
EXT  MAKRO21 ( )
EXT  MAKRO22 ( )
EXT  MAKRO23 ( )
EXT  MAKRO24 ( )
EXT  MAKRO25 ( )
EXT  MAKRO26 ( )
EXT  MAKRO27 ( )
EXT  MAKRO28 ( )
EXT  MAKRO29 ( )
EXT  MAKRO30 ( )
EXT  MAKRO31 ( )
EXT  MAKRO32 ( )
EXT  MAKRO33 ( )
EXT  MAKRO34 ( )
EXT  MAKRO35 ( )
EXT  MAKRO36 ( )
EXT  MAKRO37 ( )
EXT  MAKRO38 ( )
EXT  MAKRO39 ( )
EXT  MAKRO40 ( )
EXT  MAKRO41 ( )
EXT  MAKRO42 ( )
EXT  MAKRO43 ( )
EXT  MAKRO44 ( )
EXT  MAKRO45 ( )
EXT  MAKRO46 ( )
EXT  MAKRO47 ( )
EXT  MAKRO48 ( )
EXT  MAKRO49 ( )
EXT  MAKRO50 ( )
EXT  MAKRO51 ( )
EXT  MAKRO52 ( )
EXT  MAKRO53 ( )
EXT  MAKRO54 ( )
EXT  MAKRO55 ( )
EXT  MAKRO56 ( )
EXT  MAKRO57 ( )
EXT  MAKRO58 ( )
EXT  MAKRO59 ( )
EXT  MAKRO60 ( )
EXT  MAKRO61 ( )
EXT  MAKRO62 ( )
EXT  MAKRO63 ( )
EXT  MAKRO64 ( )
EXT  MAKRO65 ( )
EXT  MAKRO66 ( )
EXT  MAKRO67 ( )
EXT  MAKRO68 ( )
EXT  MAKRO69 ( )
EXT  MAKRO70 ( )
EXT  MAKRO71 ( )
EXT  MAKRO72 ( )
EXT  MAKRO73 ( )
EXT  MAKRO74 ( )
EXT  MAKRO75 ( )
EXT  MAKRO76 ( )
EXT  MAKRO77 ( )
EXT  MAKRO78 ( )
EXT  MAKRO79 ( )
EXT  MAKRO80 ( )
EXT  MAKRO81 ( )
EXT  MAKRO82 ( )
EXT  MAKRO83 ( )
EXT  MAKRO84 ( )
EXT  MAKRO85 ( )
EXT  MAKRO86 ( )
EXT  MAKRO87 ( )
EXT  MAKRO88 ( )
EXT  MAKRO89 ( )
EXT  MAKRO90 ( )
EXT  MAKRO91 ( )
EXT  MAKRO92 ( )
EXT  MAKRO93 ( )
EXT  MAKRO94 ( )
EXT  MAKRO95 ( )
EXT  MAKRO96 ( )
EXT  MAKRO97 ( )
EXT  MAKRO98 ( )
EXT  MAKRO99 ( )
EXT  MAKRO100 ( )
EXT  MAKRO101 ( )
EXT  MAKRO102 ( )
EXT  MAKRO103 ( )
EXT  MAKRO104 ( )
EXT  MAKRO105 ( )
EXT  MAKRO106 ( )
EXT  MAKRO107 ( )
EXT  MAKRO108 ( )
EXT  MAKRO109 ( )
EXT  MAKRO110 ( )
EXT  MAKRO111 ( )
EXT  MAKRO112 ( )
EXT  MAKRO113 ( )
EXT  MAKRO114 ( )
EXT  MAKRO115 ( )
EXT  MAKRO116 ( )
EXT  MAKRO117 ( )
EXT  MAKRO118 ( )
EXT  MAKRO119 ( )
EXT  MAKRO120 ( )
EXT  MAKRO121 ( )
EXT  MAKRO122 ( )
EXT  MAKRO123 ( )
EXT  MAKRO124 ( )
EXT  MAKRO125 ( )
EXT  MAKRO126 ( )
EXT  MAKRO127 ( )
EXT  MAKRO128 ( )
EXT  MAKRO129 ( )
EXT  MAKRO130 ( )
EXT  MAKRO131 ( )
EXT  MAKRO132 ( )
EXT  MAKRO133 ( )
EXT  MAKRO134 ( )
EXT  MAKRO135 ( )
EXT  MAKRO136 ( )
EXT  MAKRO137 ( )
EXT  MAKRO138 ( )
EXT  MAKRO139 ( )
EXT  MAKRO140 ( )
EXT  MAKRO141 ( )
EXT  MAKRO142 ( )
EXT  MAKRO143 ( )
EXT  MAKRO144 ( )
EXT  MAKRO145 ( )
EXT  MAKRO146 ( )
EXT  MAKRO147 ( )
EXT  MAKRO148 ( )
EXT  MAKRO149 ( )
EXT  MAKRO150 ( )
EXT  MAKRO151 ( )
EXT  MAKRO152 ( )
EXT  MAKRO153 ( )
EXT  MAKRO154 ( )
EXT  MAKRO155 ( )
EXT  MAKRO156 ( )
EXT  MAKRO157 ( )
EXT  MAKRO158 ( )
EXT  MAKRO159 ( )
EXT  MAKRO160 ( )
EXT  MAKRO161 ( )
EXT  MAKRO162 ( )
EXT  MAKRO163 ( )
EXT  MAKRO164 ( )
EXT  MAKRO165 ( )
EXT  MAKRO166 ( )
EXT  MAKRO167 ( )
EXT  MAKRO168 ( )
EXT  MAKRO169 ( )
EXT  MAKRO170 ( )
EXT  MAKRO171 ( )
EXT  MAKRO172 ( )
EXT  MAKRO173 ( )
EXT  MAKRO174 ( )
EXT  MAKRO175 ( )
EXT  MAKRO176 ( )
EXT  MAKRO177 ( )
EXT  MAKRO178 ( )
EXT  MAKRO179 ( )
EXT  MAKRO180 ( )
EXT  MAKRO181 ( )
EXT  MAKRO182 ( )
EXT  MAKRO183 ( )
EXT  MAKRO184 ( )
EXT  MAKRO185 ( )
EXT  MAKRO186 ( )
EXT  MAKRO187 ( )
EXT  MAKRO188 ( )
EXT  MAKRO189 ( )
EXT  MAKRO190 ( )
EXT  MAKRO191 ( )
EXT  MAKRO192 ( )
EXT  MAKRO193 ( )
EXT  MAKRO194 ( )
EXT  MAKRO195 ( )
EXT  MAKRO196 ( )
EXT  MAKRO197 ( )
EXT  MAKRO198 ( )
EXT  MAKRO199 ( )
EXT  MAKRO200 ( )
EXT  MAKRO201 ( )
EXT  MAKRO202 ( )
EXT  MAKRO203 ( )
EXT  MAKRO204 ( )
EXT  MAKRO205 ( )
EXT  MAKRO206 ( )
EXT  MAKRO207 ( )
EXT  MAKRO208 ( )
EXT  MAKRO209 ( )
EXT  MAKRO210 ( )
EXT  MAKRO211 ( )
EXT  MAKRO212 ( )
EXT  MAKRO213 ( )
EXT  MAKRO214 ( )
EXT  MAKRO215 ( )
EXT  MAKRO216 ( )
EXT  MAKRO217 ( )
EXT  MAKRO218 ( )
EXT  MAKRO219 ( )
EXT  MAKRO220 ( )
EXT  MAKRO221 ( )
EXT  MAKRO222 ( )
EXT  MAKRO223 ( )
EXT  MAKRO224 ( )
EXT  MAKRO225 ( )
EXT  MAKRO226 ( )
EXT  MAKRO227 ( )
EXT  MAKRO228 ( )
EXT  MAKRO229 ( )
EXT  MAKRO230 ( )
EXT  MAKRO231 ( )
EXT  MAKRO232 ( )
EXT  MAKRO233 ( )
EXT  MAKRO234 ( )
EXT  MAKRO235 ( )
EXT  MAKRO236 ( )
EXT  MAKRO237 ( )
EXT  MAKRO238 ( )
EXT  MAKRO239 ( )
EXT  MAKRO240 ( )
EXT  MAKRO241 ( )
EXT  MAKRO242 ( )
EXT  MAKRO243 ( )
EXT  MAKRO244 ( )
EXT  MAKRO245 ( )
EXT  MAKRO246 ( )
EXT  MAKRO247 ( )
EXT  MAKRO248 ( )
EXT  MAKRO249 ( )
EXT  MAKRO250 ( )
EXT  UP1 ( )
EXT  UP2 ( )
EXT  UP3 ( )
EXT  UP4 ( )
EXT  UP5 ( )
EXT  UP6 ( )
EXT  UP7 ( )
EXT  UP8 ( )
EXT  UP9 ( )
EXT  UP10 ( )
EXT  UP11 ( )
EXT  UP12 ( )
EXT  UP13 ( )
EXT  UP14 ( )
EXT  UP15 ( )
EXT  UP16 ( )
EXT  UP17 ( )
EXT  UP18 ( )
EXT  UP19 ( )
EXT  UP20 ( )
EXT  UP21 ( )
EXT  UP22 ( )
EXT  UP23 ( )
EXT  UP24 ( )
EXT  UP25 ( )
EXT  UP26 ( )
EXT  UP27 ( )
EXT  UP28 ( )
EXT  UP29 ( )
EXT  UP30 ( )
EXT  UP31 ( )
EXT  UP32 ( )
EXT  UP33 ( )
EXT  UP34 ( )
EXT  UP35 ( )
EXT  UP36 ( )
EXT  UP37 ( )
EXT  UP38 ( )
EXT  UP39 ( )
EXT  UP40 ( )
EXT  UP41 ( )
EXT  UP42 ( )
EXT  UP43 ( )
EXT  UP44 ( )
EXT  UP45 ( )
EXT  UP46 ( )
EXT  UP47 ( )
EXT  UP48 ( )
EXT  UP49 ( )
EXT  UP50 ( )
EXT  UP51 ( )
EXT  UP52 ( )
EXT  UP53 ( )
EXT  UP54 ( )
EXT  UP55 ( )
EXT  UP56 ( )
EXT  UP57 ( )
EXT  UP58 ( )
EXT  UP59 ( )
EXT  UP60 ( )
EXT  UP61 ( )
EXT  UP62 ( )
EXT  UP63 ( )
EXT  UP64 ( )
EXT  UP65 ( )
EXT  UP66 ( )
EXT  UP67 ( )
EXT  UP68 ( )
EXT  UP69 ( )
EXT  UP70 ( )
EXT  UP71 ( )
EXT  UP72 ( )
EXT  UP73 ( )
EXT  UP74 ( )
EXT  UP75 ( )
EXT  UP76 ( )
EXT  UP77 ( )
EXT  UP78 ( )
EXT  UP79 ( )
EXT  UP80 ( )
EXT  UP81 ( )
EXT  UP82 ( )
EXT  UP83 ( )
EXT  UP84 ( )
EXT  UP85 ( )
EXT  UP86 ( )
EXT  UP87 ( )
EXT  UP88 ( )
EXT  UP89 ( )
EXT  UP90 ( )
EXT  UP91 ( )
EXT  UP92 ( )
EXT  UP93 ( )
EXT  UP94 ( )
EXT  UP95 ( )
EXT  UP96 ( )
EXT  UP97 ( )
EXT  UP98 ( )
EXT  UP99 ( )
EXT  UP100 ( )
EXT  UP101 ( )
EXT  UP102 ( )
EXT  UP103 ( )
EXT  UP104 ( )
EXT  UP105 ( )
EXT  UP106 ( )
EXT  UP107 ( )
EXT  UP108 ( )
EXT  UP109 ( )
EXT  UP110 ( )
EXT  UP111 ( )
EXT  UP112 ( )
EXT  UP113 ( )
EXT  UP114 ( )
EXT  UP115 ( )
EXT  UP116 ( )
EXT  UP117 ( )
EXT  UP118 ( )
EXT  UP119 ( )
EXT  UP120 ( )
EXT  UP121 ( )
EXT  UP122 ( )
EXT  UP123 ( )
EXT  UP124 ( )
EXT  UP125 ( )
EXT  UP126 ( )
EXT  UP127 ( )
EXT  UP128 ( )
EXT  FOLGE1 ( )
EXT  FOLGE2 ( )
EXT  FOLGE3 ( )
EXT  FOLGE4 ( )
EXT  FOLGE5 ( )
EXT  FOLGE6 ( )
EXT  FOLGE7 ( )
EXT  FOLGE8 ( )
EXT  FOLGE9 ( )
EXT  FOLGE10 ( )
EXT  FOLGE11 ( )
EXT  FOLGE12 ( )
EXT  FOLGE13 ( )
EXT  FOLGE14 ( )
EXT  FOLGE15 ( )
EXT  FOLGE16 ( )
EXT  FOLGE17 ( )
EXT  FOLGE18 ( )
EXT  FOLGE19 ( )
EXT  FOLGE20 ( )
EXT  FOLGE21 ( )
EXT  FOLGE22 ( )
EXT  FOLGE23 ( )
EXT  FOLGE24 ( )
EXT  FOLGE25 ( )
EXT  FOLGE26 ( )
EXT  FOLGE27 ( )
EXT  FOLGE28 ( )
EXT  FOLGE29 ( )
EXT  FOLGE30 ( )
EXT  FOLGE31 ( )
EXT  FOLGE32 ( )
EXT  FOLGE33 ( )
EXT  FOLGE34 ( )
EXT  FOLGE35 ( )
EXT  FOLGE36 ( )
EXT  FOLGE37 ( )
EXT  FOLGE38 ( )
EXT  FOLGE39 ( )
EXT  FOLGE40 ( )
EXT  FOLGE41 ( )
EXT  FOLGE42 ( )
EXT  FOLGE43 ( )
EXT  FOLGE44 ( )
EXT  FOLGE45 ( )
EXT  FOLGE46 ( )
EXT  FOLGE47 ( )
EXT  FOLGE48 ( )
EXT  FOLGE49 ( )
EXT  FOLGE50 ( )
EXT  FOLGE51 ( )
EXT  FOLGE52 ( )
EXT  FOLGE53 ( )
EXT  FOLGE54 ( )
EXT  FOLGE55 ( )
EXT  FOLGE56 ( )
EXT  FOLGE57 ( )
EXT  FOLGE58 ( )
EXT  FOLGE59 ( )
EXT  FOLGE60 ( )
EXT  FOLGE61 ( )
EXT  FOLGE62 ( )
EXT  FOLGE63 ( )
EXT  FOLGE64 ( )
EXT  FOLGE65 ( )
EXT  FOLGE66 ( )
EXT  FOLGE67 ( )
EXT  FOLGE68 ( )
EXT  FOLGE69 ( )
EXT  FOLGE70 ( )
EXT  FOLGE71 ( )
EXT  FOLGE72 ( )
EXT  FOLGE73 ( )
EXT  FOLGE74 ( )
EXT  FOLGE75 ( )
EXT  FOLGE76 ( )
EXT  FOLGE77 ( )
EXT  FOLGE78 ( )
EXT  FOLGE79 ( )
EXT  FOLGE80 ( )
EXT  FOLGE81 ( )
EXT  FOLGE82 ( )
EXT  FOLGE83 ( )
EXT  FOLGE84 ( )
EXT  FOLGE85 ( )
EXT  FOLGE86 ( )
EXT  FOLGE87 ( )
EXT  FOLGE88 ( )
EXT  FOLGE89 ( )
EXT  FOLGE90 ( )
EXT  FOLGE91 ( )
EXT  FOLGE92 ( )
EXT  FOLGE93 ( )
EXT  FOLGE94 ( )
EXT  FOLGE95 ( )
EXT  FOLGE96 ( )
EXT  FOLGE97 ( )
EXT  FOLGE98 ( )
EXT  FOLGE99 ( )
EXT  FOLGE100 ( )
EXT  FOLGE101 ( )
EXT  FOLGE102 ( )
EXT  FOLGE103 ( )
EXT  FOLGE104 ( )
EXT  FOLGE105 ( )
EXT  FOLGE106 ( )
EXT  FOLGE107 ( )
EXT  FOLGE108 ( )
EXT  FOLGE109 ( )
EXT  FOLGE110 ( )
EXT  FOLGE111 ( )
EXT  FOLGE112 ( )
EXT  FOLGE113 ( )
EXT  FOLGE114 ( )
EXT  FOLGE115 ( )
EXT  FOLGE116 ( )
EXT  FOLGE117 ( )
EXT  FOLGE118 ( )
EXT  FOLGE119 ( )
EXT  FOLGE120 ( )
EXT  FOLGE121 ( )
EXT  FOLGE122 ( )
EXT  FOLGE123 ( )
EXT  FOLGE124 ( )
EXT  FOLGE125 ( )
EXT  FOLGE126 ( )
EXT  FOLGE127 ( )
EXT  FOLGE128 ( )

;ENDFOLD
;___$$$___CONFIG.VW____end___
;FOLD USER GLOBALS;%E{O},%P___$$$___CONFIG.USB___start___
;==================================
; Userdefined Types 
;==================================
;==================================
; Userdefined Externals 
;==================================
;==================================
; Userdefined Variables 
;==================================
;ENDFOLD;___$$$___CONFIG.USB___end_____
ENDDAT
