;---------------------------------------------------------------------------
; BACKWARD.INI - Configuration file for backward motion execution
;
;[TRACE] 
;ENABLE    = xx:       TRUE:  enables trace for backward motion
;                      FALSE: no trace and no backward motions
;MOVEMENTS = nn:       The number of movements to be traced
;                      (max: nn=60; min: nn=0, default: nn=30)
;CYCFLAGS  = nn:       The number of $CYCFLAGS to be traced
;                      (max: nn=26; min: nn=0, default: nn=10)
;FINISHED_ SUB = xx:    STOP:  in backward the robot will stop when getting
;                             to a finished subroutine. No further backward
;                             execution is possible.
;                      SKIP:  in backward the robot will skip all traced
;                             motions of a finished subroutine and continue
;                             before the subroutine call.
;                      ENTER: not yet implemented
;
;[OFC]                 the entries in this section only take effect if the
;                      trace method is enabled.
;                      (OFC means outputs, flags, cycle flags).
;SET_TO_FALSE = xx:    FALSE: ofc keep their state.
;                      TRUE:  ofc are set to FALSE when changing from forward
;                             to backward direction.
;TRACE = xx:           AT_BWDSTART: ofc are stored in the advance run on
;                                   any beginning of a motion fold. The
;                                   beginning of a motion fold is indicated
;                                   to the kernel system by the KRL assignment
;                                   $BWDSTART = TRUE (spot welding applications).
;                                   On $BWDSTART = FALSE the storing is done
;                                   AT_LEAVING
;                      AT_LEAVING:  ofc are stored in the main run when leaving
;                                   a programmed motion point.
;                      NO_TRACE:    ofc will not be stored, so they can not be
;                                   restored either.
;RESTORE = xx:         AT_FWD:     ofc will be restored when changing from
;                                  backward to forward direction.
;                      AT_BWD:     ofc will be restored in backward direction
;                                  on every backward motion.
;           
;[SCAN]
;ENABLE = xx:          TRUE:  enables backward motion by scanning i-code 
;                             backward
;                      FALSE: disables backward motion by scanning i-code 
;                             backward
;[GENERAL]
;BACKWARDSTART = xx:   TRUE:  There's a label at the beginning of every
;                             motion fold. The scanning is done back to
;                             this label. So the whole fold can be executed
;                             and the tool and base information are correct.
;                             Using the trace method the assignment is used
;                             for storing ofc, if the RESTORE-item is set to
;                             AT_BWD.
;IMPLICIT_BCO = xx:    TRUE:  If the robot is not on the path pressing either
;                             Start-Minus or Start-Plus implies a BCO motion.
;                      FALSE: not yet implemented
;QUIT_M_TRACE_SCAN     TRUE:  Quit message "Trace buffer empty, start with backward scan"
;                      FALSE: No quit message "Trace buffer empty, start with backward scan"
;---------------------------------------------------------------------------

[TRACE]
ENABLE = TRUE
FINISHED_SUB = STOP
MOVEMENTS = 30
CYCFLAGS = 26

[OFC]
SET_TO_FALSE = TRUE
TRACE = AT_LEAVING
RESTORE = AT_FWD

[SCAN]
ENABLE = FALSE

[GENERAL]
BACKWARDSTART = FALSE
IMPLICIT_BCO = TRUE
QUIT_M_TRACE_SCAN = TRUE

[ENDSECTION]







